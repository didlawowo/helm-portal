fullnameOverride: helm-portal
namespace: helm-portal
podAnnotations: {}
image:
  repository: fizzbuzz2/helm-portal
  tag: "f19e484"
  pullPolicy: "Always"
  pullSecrets: []
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%
replicas: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
serviceAccount:
  create: true
  name: helm-portal
  annotations: {}
nodeSelector: {}
tolerations: []
affinity: {}
initContainers:
  - name: init-data-dir
    image: busybox
    command: ["sh", "-c", "mkdir -p /app/data/temp /app/data/blobs /app/data/manifests /app/data/charts &&  chown -R 1000:1000 /app/data"]
    volumeMounts:
      - name: data-volume
        mountPath: /app/data
resources:
  limits:
    cpu: 300m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
# volumes 
persistentVolumesClaims:
  - name: helm-portal-data
    accessModes:
      - ReadWriteOnce
    storageClassName: default
    size: 2Gi
application:
  ports:
    - name: http
      containerPort: 3030
      protocol: TCP
  containerName: helm-portal
  command: []
  args: []
service:
  name: helm-portal
  port: 80
  targetPort: 3030
  type: ClusterIP
  portName: http
secrets:
  dotenv: []
  #   - name: backup
  #     path: values/home/secrets/secrets.env
  files:
    - name: auth
      path: values/home/secrets/auth.yaml
volumeMounts:
  - name: config-volume
    mountPath: /app/config # RÃ©pertoire entier
    readOnly: true
  - name: data-volume
    mountPath: /app/data
volumes:
  - name: config-volume
    projected:
      # ðŸŽ¯ Combine plusieurs sources
      sources:
        - configMap:
            name: helm-portal-config
            items:
              - key: config.yaml
                path: config.yaml # Sera /app/config/config.yaml
        - secret:
            name: helm-portal-auth
            items:
              - key: auth.yaml
                path: auth.yaml
  - name: data-volume
    persistentVolumeClaim:
      claimName: helm-portal-data
# probes
livenessProbe:
  httpGet:
    scheme: HTTP
    path: /health
    port: 3030
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  httpGet:
    scheme: HTTP
    path: /health
    port: 3030
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
ingress:
  host: helm-portal.example.com
  tls:
    enabled: true
    secretName: ""
  ingressClassName: nginx
env:
  - name: ENV
    value: production
  # Configuration via variables d'environnement
  - name: SERVER_PORT
    value: "3030"
  - name: LOG_LEVEL
    value: "info"
  # Auth configuration - Option 1: Variable unique avec liste
  # Temporaire pour test - Ã  remplacer par secret en production
  - name: HELM_USERS
    # Auth configuration - Choisir UNE des 3 options :

    value: "admin:secret123,dev:devpass,readonly:readpass"
# Backup configuration (si activÃ©)
# - name: BACKUP_ENABLED
#   value: "true"
# - name: BACKUP_PROVIDER
#   value: "aws"  # ou "gcp" ou "azure"

# AWS config
# - name: AWS_BUCKET
#   value: "helm-portal-backup"
# - name: AWS_REGION
#   value: "eu-west-1"
# - name: AWS_ACCESS_KEY_ID
#   value: "your-access-key"
# - name: AWS_SECRET_ACCESS_KEY
#   value: "your-secret-key"

# GCP config  
# - name: GCP_BUCKET
#   value: "helm-portal-backup"
# - name: GCP_PROJECT_ID
#   value: "your-project-id"
# - name: GCP_CREDENTIALS_FILE
#   value: "/path/to/credentials.json"

# Azure config
# - name: AZURE_STORAGE_ACCOUNT
#   value: "helmportalbackup"
# - name: AZURE_CONTAINER
#   value: "backup"
# - name: AZURE_STORAGE_ACCOUNT_KEY
#   value: "your-storage-key"
envFrom: []
# Secret pour les credentials d'authentification (activer aprÃ¨s crÃ©ation du secret)
# - secretRef:
#     name: helm-portal-auth
# Secret pour les credentials de backup (optionnel)
# - secretRef:
#     name: helm-portal-backup
config:
  server:
    port: 3030
  storage:
    path: "data"
  backup:
    enabled: false
    provider: "" # "aws" ou "gcp"
    # gcp:
    #   bucket: "helm-portal-backup"
    #   projectID: "dc-consulting-home"
    # aws:
    #   bucket: "helm-portal-backup"
    #   region: "eu-west-1"
  logging:
    level: "info"
    format: "text"
