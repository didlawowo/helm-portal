fullnameOverride: helm-portal
namespace: helm-portal
podAnnotations: {}

image:
  repository: fizzbuzz2/helm-portal
  tag: "2f67934"
  pullPolicy: "Always"
  pullSecrets: []
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%
replicas: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
serviceAccount:
  create: true
  name: helm-portal
  annotations: {}
nodeSelector: {}
tolerations: []
affinity: {}
resources:
  limits:
    cpu: 300m
    memory: 256i
  requests:
    cpu: 100m
    memory: 128Mi
# volumes 
persistentVolumesClaims:
- name: helm-portal-data
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn
  size: 2Gi
application:
  ports:
  - name: http
    containerPort: 3030
    protocol: TCP
  containerName: helm-portal
  command: []
  args: []
service:
  name: helm-portal
  port: 80
  targetPort: 3030
  type: ClusterIP
  portName: http
secrets:
  dotenv: []
  #   - name: backup
  #     path: values/home/secrets/secrets.env
  files:
  - name: auth
    path: values/home/secrets/auth.yaml
volumeMounts:
- name: config-volume
  mountPath: /app/config/config.yaml
  subPath: config.yaml
  readOnly: true
- name: data-volume
  mountPath: /app/data
- name: auth-volume
  mountPath: /app/config/auth.yaml
  subPath: auth.yaml
  readOnly: true
volumes:
- name: config-volume
  configMap:
    name: helm-portal-config
- name: auth-volume
  secret:
    secretName: helm-portal-auth
- name: data-volume
  persistentVolumeClaim:
    claimName: helm-portal-data
# probes
livenessProbe:
  httpGet:
    scheme: HTTP
    path: /health
    port: 3030
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  httpGet:
    scheme: HTTP
    path: /health
    port: 3030
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
ingress:
  domainName: helm-portal.example.com
  tls:
    enabled: true
    secretName: ""
  ingressClassName: traefik
env:
- name: ENV
  value: production
envFrom: []
# - secretRef:
#  name: helm-portal-backup
config:
  server:
    port: 3030
  storage:
    path: "data"
  backup:
    enabled: false
    provider: "" # "aws" ou "gcp"
    # gcp:
    #   bucket: "helm-portal-backup"
    #   projectID: "dc-consulting-home"
    # aws:
    #   bucket: "helm-portal-backup"
    #   region: "eu-west-1"
  logging:
    level: "info"
    format: "text"
